@use '~@angular/material' as mat;
@use './assets/scss/tecno-palette' as tecno;

@include mat.core();

@mixin create-theme ($primary, $accent, $theme-name) {
  
  $light-theme: mat.define-light-theme((
    color: (
     primary: $primary,
     accent: $accent,
    )
  ));
  $dark-theme: mat.define-dark-theme((
    color: (
      primary: $primary,
      accent: $accent,
    )
  ));

  .light-#{$theme-name} {
    @include mat.all-component-colors($light-theme);
    .bg-menu-options {
      background-color: $bg-color-light;
    }
    
    .selected-module {
      background-color: $bg-color-light;
    }
    
    .left-line-selected {
      background-color: map-get($primary, 500);
    }
    
    .menu-label-text-color {
      color: map-get($primary, 500);
    }
    
    .bg-primary-color {
      background-color: map-get($primary, 500);
    }
  }

  .dark-#{$theme-name} {
    @include mat.all-component-colors($dark-theme);
    .bg-menu-options {
      background-color: $bg-color-dark;
    }
  
    .selected-module {
      background-color: $bg-color-dark;
    }
  
    .left-line-selected {
      background-color: map-get($primary, 500);
    }
  
    .menu-label-text-color {
      color: map-get($primary, 500);
    }
  
    .bg-primary-color {
      background-color: map-get($primary, 500);
    }
  }
}

$bg-color-light: mat.get-color-from-palette(tecno.$grey-palette, 100);
$bg-color-dark: mat.get-color-from-palette(tecno.$tecno-dark-theme-background-palette, 'background');

$light-theme-tecno: mat.define-light-theme((
  color: (
    primary:  mat.define-palette(tecno.$tecno-primary-palette),
    accent: mat.define-palette(tecno.$tecno-accent-palette),
  )
));

@include mat.all-component-themes($light-theme-tecno);

@include create-theme(mat.define-palette(tecno.$deep-purple-palette), mat.define-palette(tecno.$amber-palette), 'theme-deeppurple-amber');
@include create-theme(mat.define-palette(tecno.$indigo-palette), mat.define-palette(tecno.$pink-palette), 'theme-indigo-pink');
@include create-theme(mat.define-palette(tecno.$cyan-palette), mat.define-palette(tecno.$red-palette), 'theme-cyan-red');
@include create-theme(mat.define-palette(tecno.$tecno-primary-palette), mat.define-palette(tecno.$tecno-accent-palette),'theme-tecno');
    
    